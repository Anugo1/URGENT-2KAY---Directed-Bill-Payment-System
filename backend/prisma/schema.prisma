<<<<<<< HEAD
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TransactionActivity {
  id            String               @id @default(uuid())
  transactionId Int
  userId        Int
  action        String // 'initiated', 'payment_success', 'provider_confirmed', 'failed'
  description   String
  timestamp     DateTime @default(now())

  transaction Payment @relation(fields: [transactionId], references: [id])
  user        User    @relation(fields: [userId], references: [id])
}

model Payment {
  id         String                @id @default(uuid())
  amount     Float
  status     String // 'pending', 'completed', 'failed'
  createdAt  DateTime              @default(now())
  updatedAt  DateTime              @updatedAt
  activities TransactionActivity[]
  User       User?                 @relation(fields: [userId], references: [id])
  userId     Int?
}

model User {
  id           String                @id @default(uuid())
  email        String                @unique
  passwordHash String
  payments     Payment[]
  activities   TransactionActivity[]
  bills        Bill[]
}

model Bill {
  id        String   @id @default(uuid())
  title     String
  amount    Float
  dueDate   DateTime
  isPaid    Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}